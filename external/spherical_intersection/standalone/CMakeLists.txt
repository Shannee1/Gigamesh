cmake_minimum_required (VERSION 3.1)
set (CMAKE_CXX_STANDARD 17)
set(THREADS_PREFER_PTHREAD_FLAG ON)
if (NOT SPHERICAL_INTERSECTION_LIB)
	message(STATUS "Using ${CMAKE_CURRENT_SOURCE_DIR}/../libspherical_intersection.a as spherical_intersection library. Set SPHERICAL_INTERSECTION_LIB to use a different file.")
	set(SPHERICAL_INTERSECTION_LIB ${CMAKE_CURRENT_SOURCE_DIR}/../libspherical_intersection.a)
endif()
if (NOT SPHERICAL_INTERSECTION_SRC_DIR)
	message(STATUS "Using ${CMAKE_CURRENT_SOURCE_DIR}/.. as spherical_intersection library source directory. Set SPHERICAL_INTERSECTION_SRC_DIR to use a different directory.")
	set(SPHERICAL_INTERSECTION_SRC_DIR ${CMAKE_CURRENT_SOURCE_DIR}/..)
endif()
find_package(Threads REQUIRED)
add_executable(standalone src/standalone.cpp)
add_executable(profiles src/profiles.cpp)
add_subdirectory(input_parser)
add_subdirectory(timer)
add_subdirectory(object_io)
target_link_libraries(standalone Threads::Threads ${SPHERICAL_INTERSECTION_LIB} input_parser timer object_io)
target_link_libraries(profiles Threads::Threads ${SPHERICAL_INTERSECTION_LIB} input_parser timer object_io)
target_include_directories(standalone PRIVATE ${SPHERICAL_INTERSECTION_SRC_DIR}/include input_parser/include object_io/include timer/include)
target_include_directories(profiles PRIVATE ${SPHERICAL_INTERSECTION_SRC_DIR}/include input_parser/include object_io/include timer/include)
if (NOT CMAKE_BUILD_TYPE)
	message(STATUS "Using default build type: Release")
	set(CMAKE_BUILD_TYPE Release)
endif() 
set(DEBUG_OPTIONS "-g;-Wall;-Wextra;-pedantic")
set(RELEASE_OPTIONS "-O3")
target_compile_options(standalone PRIVATE "$<$<CONFIG:Debug>:${DEBUG_OPTIONS}>")
target_compile_options(standalone PRIVATE "$<$<CONFIG:Release>:${RELEASE_OPTIONS}>")
