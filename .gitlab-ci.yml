stages:
  - build
  - test

windows:
  only:
    - master

  # Use created image for mxe
  image: rkuehl83/ubuntu_bionic_mxe_qt_static:latest
  stage: build
  # install the necessary build tools when needed
  #before_script:
   #- apt update && apt -y install cmake libtiff5-dev #make autoconf g++ git cmake unzip
   #- apt -y install qtbase5-dev libcairo2-dev libtiff5-dev g++-8 sudo
  script:
 #   - git checkout windows
    - export PATH="/mxe/usr/bin:$PATH"
    - export PATH="/mxe/usr/x86_64-w64-mingw32.static/qt5/bin:$PATH"
    - export QT_SELECT=qt5

    # build gigamesh
    - mkdir build
    - cd build
    - x86_64-w64-mingw32.static-cmake .. -DCMAKE_BUILD_TYPE=Release -G"Unix Makefiles" -DMINGW_CI_BUILD=1
    - make
    - strip gui/gigamesh.exe
    - strip cli/gigamesh-featurevectors.exe
    - strip cli/gigamesh-tolegacy.exe
    - strip cli/gigamesh-clean.exe
    - strip cli/gigamesh-info.exe
    - strip cli/gigamesh-borders.exe
    - strip cli/spherical_intersection_cli/gigamesh-featurevectors-sl.exe
    - strip cli/spherical_intersection_cli/gigamesh-sphere-profiles.exe

  artifacts:
    name: "gigamesh_windows"
    paths:
      - build/gui/gigamesh.exe
      - build/cli/gigamesh-featurevectors.exe
      - build/cli/gigamesh-tolegacy.exe
      - build/cli/gigamesh-clean.exe
      - build/cli/gigamesh-info.exe
      - build/cli/gigamesh-borders.exe
      - build/cli/spherical_intersection_cli/gigamesh-featurevectors-sl.exe
      - build/cli/spherical_intersection_cli/gigamesh-sphere-profiles.exe
    expire_in: 4 hours
   
ubuntu bionic:
  only:
    - master
  # Use ubuntu 18.04 LTS
  image: ubuntu:bionic
  stage: build
  # install the necessary build tools when needed
  before_script: 
   - apt update && apt -y install make autoconf g++ git cmake unzip
   - apt -y install qtbase5-dev libcairo2-dev libtiff5-dev g++-8 sudo
  script:
    # Make sure g++-8, gcc-8 is default
    - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 10
    - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 10
    - export QT_SELECT=qt5

    # build gigamesh
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_BUILD_TYPE=Release -G"Unix Makefiles"
    - make
    - strip gui/gigamesh
    - strip cli/gigamesh-featurevectors
    - strip cli/gigamesh-tolegacy
    - strip cli/gigamesh-clean
    - strip cli/gigamesh-info
    - strip cli/gigamesh-borders
    - strip cli/spherical_intersection_cli/gigamesh-featurevectors-sl
    - strip cli/spherical_intersection_cli/gigamesh-sphere-profiles

  artifacts:
    name: "gigamesh_bionic"
    paths:
      - build/gui/gigamesh
      - build/cli/gigamesh-featurevectors
      - build/cli/gigamesh-tolegacy
      - build/cli/gigamesh-clean
      - build/cli/gigamesh-info
      - build/cli/gigamesh-borders
      - build/cli/spherical_intersection_cli/gigamesh-featurevectors-sl
      - build/cli/spherical_intersection_cli/gigamesh-sphere-profiles
    expire_in: 4 hours
    
manjaro arch:
  only:
    - master
    - develop
  # Use latest manjaro release
  image: archlinux/base
  stage: build
  # install the necessary build tools when needed
  before_script: 
   - pacman -Sy
   - pacman -S gcc glibc cmake boost unzip qtcreator make cairo git --noconfirm
  script:
    - export QT_SELECT=qt5

    # build gigamesh
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_BUILD_TYPE=Release -G"Unix Makefiles"
    - make
    - strip gui/gigamesh
    - strip cli/gigamesh-featurevectors
    - strip cli/gigamesh-tolegacy
    - strip cli/gigamesh-clean
    - strip cli/gigamesh-info
    - strip cli/gigamesh-borders
    - strip cli/spherical_intersection_cli/gigamesh-featurevectors-sl
    - strip cli/spherical_intersection_cli/gigamesh-sphere-profiles

  artifacts:
    name: "gigamesh_arch_manjaro"
    paths:
      - build/gui/gigamesh
      - build/cli/gigamesh-featurevectors
      - build/cli/gigamesh-tolegacy
      - build/cli/gigamesh-clean
      - build/cli/gigamesh-info
      - build/cli/gigamesh-borders
      - build/cli/spherical_intersection_cli/gigamesh-featurevectors-sl
      - build/cli/spherical_intersection_cli/gigamesh-sphere-profiles
      - build/tests/gigameshCore_tests
    expire_in: 4 hours

manjaro arch test:
  only:
    - master
    - develop
  # Use latest manjaro release
  image: archlinux/base
  stage: test
  dependencies:
    - manjaro arch

  script:
    - build/tests/gigameshCore_tests -o report.xml -r junit

  artifacts:
    reports:
      junit: report.xml
    
    expire_in: 4 hours
